name: Backend Continuous Integration

on:
    workflow_dispatch:
    schedule:
        - cron: '0 0 * * 0'
    pull_request:
        branches:
        - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install pipenv
        run: pip install pipenv

      - name: Install flake8
        run: pip install flake8

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies and run linting
        run: |
          cd starter/backend
          pipenv install
          pipenv run lint

      - name: Check linting results
        run: echo "Linting check complete"

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install pipenv
        run: pip install pipenv

      - name: Install flake8
        run: pip install flake8

      - name: Install dependencies and run tests
        run: |
          cd starter/backend
          pipenv install
          pipenv run test

      - name: Check test results
        run: echo "Tests complete"

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install pipenv
        run: pip install pipenv

      - name: Install flake8
        run: pip install flake8

      - name: Cache node modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: ~/.pipenv
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Install dependencies and run tests
        run: |
          cd starter/backend
          pipenv install
          pipenv run test

      - name: Build Docker image
        run: |
          cd starter/backend
          docker build --tag mp-backend:latest .

